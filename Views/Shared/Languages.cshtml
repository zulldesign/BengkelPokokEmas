@using System.Globalization
@using DotNetOpenAuth.OpenId.Extensions.SimpleRegistration
@using RouteConstatnts = VirtoCommerce.Web.Client.Extensions.Routing
@using VirtoCommerce.Foundation.AppConfig.Model
@{
    var tempValues = new RouteValueDictionary(ViewContext.RouteData.Values);
    foreach (var key in Request.QueryString.Keys.Cast<string>())
    {
        if (!tempValues.ContainsKey(key))
        {
            tempValues.Add(key, Request.QueryString[key]);
        }
    }

    var store = StoreHelper.StoreClient.GetCurrentStore();
    if (store != null && store.Languages != null && store.Languages.Any())
    {
        var currentCulture = CultureInfo.CreateSpecificCulture(UICulture);
    <span>@("Language".Localize()): 
	       
        <span class="current">@currentCulture.NativeName.Substring(0, currentCulture.NativeName.IndexOf('(')).Trim()</span>
    </span>
    <ul>
        @foreach (var lang in store.Languages)
        {
            var culture = CultureInfo.CreateSpecificCulture(lang.LanguageCode);
            tempValues[RouteConstatnts.Constants.Language] = culture.Name;
            tempValues[RouteConstatnts.Constants.Store] = SettingsHelper.SeoEncode(StoreHelper.CustomerSession.StoreId, SeoUrlKeywordTypes.Store, culture.Name);
            
            if (tempValues.ContainsKey(RouteConstatnts.Constants.Category) && tempValues[RouteConstatnts.Constants.Category] as string != null)
            {
                tempValues[RouteConstatnts.Constants.Category] = SettingsHelper.SeoEncode(
                    SettingsHelper.SeoDecode(ViewContext.RouteData.Values[RouteConstatnts.Constants.Category].ToString()
                    , SeoUrlKeywordTypes.Category), SeoUrlKeywordTypes.Category, culture.Name);
            }

            if (tempValues.ContainsKey(RouteConstatnts.Constants.Item) && tempValues[RouteConstatnts.Constants.Item] as string != null)
            {
                tempValues[RouteConstatnts.Constants.Item] = SettingsHelper.SeoEncode(
                    SettingsHelper.SeoDecode(ViewContext.RouteData.Values[RouteConstatnts.Constants.Item].ToString()
                    , SeoUrlKeywordTypes.Item), SeoUrlKeywordTypes.Item, culture.Name);
            }
            
            var countryCode = culture.Name.Substring(culture.Name.IndexOf('-') + 1).ToLowerInvariant();
            var liClass = string.Equals(culture.Name, UICulture, StringComparison.InvariantCultureIgnoreCase) ? " selected" : "";
	  
            <li class="@liClass">
                <img src="~/Content/themes/default/images/blank.gif" class="flag flag-@countryCode" alt="@culture.NativeName">
                @Html.ActionLink(culture.NativeName.Substring(0, culture.NativeName.IndexOf('(')).Trim(), null, tempValues, new Dictionary<string, object>
                {
                    {"title", culture.NativeName}
                })
            </li>
        }
    </ul>
    }
}